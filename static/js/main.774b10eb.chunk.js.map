{"version":3,"sources":["images/logo.svg","images/hamburger.svg","images/illustration-working.svg","images/icon-brand-recognition.svg","images/icon-detailed-records.svg","images/icon-fully-customizable.svg","images/logo-white.svg","images/icon-facebook.svg","images/icon-twitter.svg","images/icon-pinterest.svg","images/icon-instagram.svg","components/navbar/navbar.jsx","components/intro/intro.jsx","components/result/result.jsx","components/shortener/shortener.jsx","components/pitch/pitch.jsx","components/banner/banner.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","useState","floatNav","setFloatNav","Fragment","className","alt","src","logo","href","hamburger","onClick","console","log","Intro","window","location","illustration_working","Result","props","buttonText","setButtonText","longUrl","id","shortUrl","slice","targetString","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","copyToClipboard","setTimeout","Shortener","urlResults","setUrlResults","inputValue","setInputValue","validInput","setValidInput","name","placeholder","onChange","e","target","setHook","test","inputText","hookValue","setHookValue","url","startsWith","formatUrl","fetch","then","response","json","responseJSON","result","handleClick","map","resultObject","inputURL","length","substring","key","Pitch","brand_recognition","detailed_records","fully_customizable","Banner","Footer","logo_white","facebook","twitter","pinterest","instagram","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.774b10eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6387840f.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.2032570c.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-working.5029d049.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-brand-recognition.1922b68a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-detailed-records.e3d9caa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-fully-customizable.cc099cea.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.ee8d91b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.7febcff9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.cb4fea0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pinterest.c557c3d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.996b697c.svg\";","import React, { useState } from \"react\";\r\nimport \"./navbar.css\";\r\nimport logo from \"../../images/logo.svg\";\r\nimport hamburger from \"../../images/hamburger.svg\";\r\n\r\nfunction Navbar() {\r\n  const [floatNav, setFloatNav] = useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"navbar\">\r\n        <img alt=\"shortly\" src={logo} />\r\n        <div className=\"navbar links main\">\r\n          <a href=\"#\">Features</a>\r\n          <a href=\"#\">Pricing</a>\r\n          <a href=\"#\">Resources</a>\r\n        </div>\r\n        <div className=\"navbar cta main\">\r\n          <a href=\"#\">Login</a>\r\n          <button>Sign Up</button>\r\n        </div>\r\n        <div className=\"nav-toggle\">\r\n          <img\r\n            alt=\"nav-toggle\"\r\n            src={hamburger}\r\n            className=\"nav-toggle\"\r\n            onClick={() => {\r\n              console.log(\"clicked\");\r\n              floatNav === \"\" ? setFloatNav(\"show\") : setFloatNav(\"\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`floating-navbar ${floatNav}`}>\r\n        <div className=\"navbar links\">\r\n          <a href=\"#\">Features</a>\r\n          <a href=\"#\">Pricing</a>\r\n          <a href=\"#\">Resources</a>\r\n        </div>\r\n        <div className=\"navbar cta\">\r\n          <a href=\"#\">Login</a>\r\n          <button>Sign Up</button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./intro.css\";\r\nimport illustration_working from \"../../images/illustration-working.svg\";\r\n\r\nfunction Intro() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"intro-main\">\r\n        <div className=\"intro-text\">\r\n          <h1>More than just shorter links</h1>\r\n          <p>\r\n            Build your brandâ€™s recognition and get detailed insights on how your\r\n            links are performing.\r\n          </p>\r\n          <button\r\n            onClick={() => {\r\n              window.location.href = \"#shorten-links\";\r\n            }}\r\n          >\r\n            Get Started\r\n          </button>\r\n        </div>\r\n        <div className=\"intro-image\">\r\n          <img alt=\"working\" src={illustration_working} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React, { useState } from \"react\";\r\nimport \"./result.css\";\r\n\r\nfunction resetButtonText(setHook) {\r\n  setHook(\"Copy\");\r\n}\r\n\r\nfunction copyToClipboard(targetString) {\r\n  // create text area and use to copy target string to clipboard\r\n  const el = document.createElement(\"textarea\");\r\n  el.value = targetString;\r\n  el.setAttribute(\"readonly\", \"\");\r\n  el.style.position = \"absolute\";\r\n  el.style.left = \"-9999px\";\r\n  document.body.appendChild(el);\r\n  el.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(el);\r\n}\r\n\r\nfunction Result(props) {\r\n  const [buttonText, setButtonText] = useState(\"Copy\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"result\">\r\n        <div className=\"long-url\">\r\n          <p>{props.longUrl}</p>\r\n        </div>\r\n        <div className={`shortened-url ${buttonText}`}>\r\n          <p id=\"shortenedUrlResult\">{props.shortUrl.slice(8)}</p>\r\n          <button\r\n            onClick={() => {\r\n              setButtonText(\"Copied\");\r\n              copyToClipboard(props.shortUrl);\r\n              setTimeout(() => resetButtonText(setButtonText), 1800);\r\n            }}\r\n          >\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport \"./shortener.css\";\r\nimport Result from \"../result/result\";\r\n\r\nfunction renderResults(resultObjects) {\r\n  // create jsx elements with shortened url(s)\r\n  return resultObjects.map(resultObject => {\r\n    const inputURL =\r\n      resultObject.longUrl.length < 28\r\n        ? resultObject.longUrl\r\n        : `${resultObject.longUrl.substring(0, 29)}...`;\r\n\r\n    return (\r\n      <Result\r\n        key={resultObject.shortUrl}\r\n        longUrl={inputURL}\r\n        shortUrl={resultObject.shortUrl}\r\n      />\r\n    );\r\n  });\r\n}\r\n\r\nfunction handleClick(inputText, hookValue, setHookValue) {\r\n  // shorten user URL input and update hook\r\n  let url = formatUrl(inputText);\r\n  return fetch(`https://api.urlday.com/short?url=${url}`)\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(responseJSON => {\r\n      setHookValue([\r\n        ...hookValue,\r\n        {\r\n          longUrl: inputText,\r\n          shortUrl: responseJSON.result\r\n        }\r\n      ]);\r\n    });\r\n}\r\n\r\nfunction is_url(str) {\r\n  //check if input is valid url\r\n  let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\r\n  if (regexp.test(str)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction formatUrl(inputText) {\r\n  // format url for api\r\n  if (inputText.startsWith(\"http\")) {\r\n    return inputText;\r\n  } else {\r\n    return `http://${inputText}`;\r\n  }\r\n}\r\n\r\nfunction handleBadUrl(setHook) {\r\n  setHook(false);\r\n  setTimeout(function() {\r\n    setHook(true);\r\n  }, 100);\r\n  setTimeout(function() {\r\n    setHook(false);\r\n  }, 200);\r\n  setTimeout(function() {\r\n    setHook(true);\r\n  }, 300);\r\n}\r\n\r\nfunction Shortener() {\r\n  const [urlResults, setUrlResults] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [validInput, setValidInput] = useState(true);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={`shortener ${validInput ? \"\" : \"error\"}`}\r\n        id=\"shorten-links\"\r\n      >\r\n        <input\r\n          name=\"url\"\r\n          placeholder=\"Shorten a link here...\"\r\n          onChange={e => {\r\n            setInputValue(e.target.value);\r\n          }}\r\n        ></input>\r\n        <button\r\n          onClick={() => {\r\n            if (is_url(inputValue)) {\r\n              handleClick(inputValue, urlResults, setUrlResults);\r\n            } else {\r\n              //faulty url, alert user\r\n              handleBadUrl(setValidInput);\r\n            }\r\n          }}\r\n        >\r\n          Shorten it!\r\n        </button>\r\n      </div>\r\n\r\n      {renderResults(urlResults)}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Shortener;\r\n","import React from \"react\";\r\nimport \"./pitch.css\";\r\nimport brand_recognition from \"../../images/icon-brand-recognition.svg\";\r\nimport detailed_records from \"../../images/icon-detailed-records.svg\";\r\nimport fully_customizable from \"../../images/icon-fully-customizable.svg\";\r\n\r\nfunction Pitch() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pitch\">\r\n        <div className=\"pitch-intro\">\r\n          <h2>Advanced Statistics</h2>\r\n          <p>\r\n            Track how your links are performing across the web with our advanced\r\n            statistics dashboard.\r\n          </p>\r\n        </div>\r\n        <div className=\"pitch-body\">\r\n          <div className=\"pitch-offer\">\r\n            <div className=\"pitch-icon\">\r\n              <img alt=\"brand recognition\" src={brand_recognition} />\r\n            </div>\r\n            <div className=\"pitch-copy\">\r\n              <h3>Brand Recognition</h3>\r\n              <p>\r\n                Boost your brand recognition with each click. Generic links\r\n                donâ€™t mean a thing. Branded links help instil confidence in your\r\n                content.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pitch-offer\">\r\n            <div className=\"pitch-icon\">\r\n              <img alt=\"detailed records\" src={detailed_records} />\r\n            </div>\r\n            <div className=\"pitch-copy\">\r\n              <h3>Detailed Records</h3>\r\n              <p>\r\n                Gain insights into who is clicking your links. Knowing when and\r\n                where people engage with your content helps inform better\r\n                decisions.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pitch-offer\">\r\n            <div className=\"pitch-icon\">\r\n              <img alt=\"fully customizable\" src={fully_customizable} />\r\n            </div>\r\n            <div className=\"pitch-copy\">\r\n              <h3>Fully Customizable</h3>\r\n              <p>\r\n                Improve brand awareness and content discoverability through\r\n                customizable links, supercharging audience engagement.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Pitch;\r\n","import React from \"react\";\r\nimport \"./banner.css\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"banner\">\r\n        <h2>Boost your links today</h2>\r\n        <button\r\n          onClick={() => {\r\n            window.location.href = \"#shorten-links\";\r\n          }}\r\n        >\r\n          Get Started\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\nimport logo_white from \"../../images/logo-white.svg\";\r\nimport facebook from \"../../images/icon-facebook.svg\";\r\nimport twitter from \"../../images/icon-twitter.svg\";\r\nimport pinterest from \"../../images/icon-pinterest.svg\";\r\nimport instagram from \"../../images/icon-instagram.svg\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"footer\">\r\n        <div className=\"footer-logo\">\r\n          <img alt=\"shortly\" src={logo_white} />\r\n        </div>\r\n        <div className=\"footer-links\">\r\n          <div className=\"link-box\">\r\n            <strong>Features</strong>\r\n            <a href=\"#\">Link Shortening</a>\r\n            <a href=\"#\">Branded Links</a>\r\n            <a href=\"#\">Analytics</a>\r\n          </div>\r\n          <div className=\"link-box\">\r\n            <strong>Resources</strong>\r\n            <a href=\"#\">Blog</a>\r\n            <a href=\"#\">Developers</a>\r\n            <a href=\"#\">Support</a>\r\n          </div>\r\n          <div className=\"link-box\">\r\n            <strong>Company</strong>\r\n            <a href=\"#\">About</a>\r\n            <a href=\"#\">Our Team</a>\r\n            <a href=\"#\">Careers</a>\r\n            <a href=\"#\">Contact</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-socials\">\r\n          <img alt=\"facebook\" src={facebook} />\r\n          <img alt=\"twitter\" src={twitter} />\r\n          <img alt=\"pinterest\" src={pinterest} />\r\n          <img alt=\"instagram\" src={instagram} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Intro from \"./components/intro/intro\";\nimport Shortener from \"./components/shortener/shortener\";\nimport Pitch from \"./components/pitch/pitch\";\nimport Banner from \"./components/banner/banner\";\nimport Footer from \"./components/footer/footer\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"head\">\n        <Navbar />\n      </div>\n      <Intro />\n      <div className=\"body-container\">\n        <Shortener />\n        <Pitch />\n      </div>\n\n      <Banner />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}